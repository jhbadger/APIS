#!/usr/bin/env ruby

require 'optparse'
require 'rubygems'
require 'Newick'
require 'ostruct'
require 'fastercsv'

# add current directory to load path
$LOAD_PATH.unshift(File.dirname($0))

require 'ApisDB'

opt = OpenStruct.new
opt.limit = nil
opt.storage = "misc_apis"
opt.ann = false
ApisDB.loadOptions(opt)

ARGV.options do |o|
  o.banner << " dataset"
  o.on("-a", "--annotation", "get contig info from input annotation, not orfname") {|t| opt.ann = t}
  o.on("-h ", "--host ", String, "database host (default #{opt.host})") {|t| opt.host = t}
  o.on("-l ", "--limit ", Integer, "limit rows output to number") {|t| opt.limit = t}
  o.on("-s ", "--storage ", String, "storage database (default #{opt.storage})") {|t| opt.storage = t}
  begin
    o.parse!
  rescue
    STDERR << $!.message << "\n"
    STDERR << o 
    exit(1)
  end
  if (ARGV.size != 1)
    STDERR << o
    exit(1)
  end
end

dataset = ARGV.shift

db = ApisDB.new(opt.host + "/" + opt.storage)

query = "SELECT sequence.seq_name, kingdom, phylum, class AS cl, ord, family, genus, species, input_ann.annotation as in_ann, apis_ann.annotation as ap_ann FROM sequence "
query += "LEFT JOIN classification ON classification.seq_name = sequence.seq_name AND classification.dataset = sequence.dataset "
query += "LEFT JOIN annotation as input_ann ON input_ann.seq_name = sequence.seq_name AND input_ann.dataset = sequence.dataset AND input_ann.source = 'input' "
query += "LEFT JOIN annotation as apis_ann ON apis_ann.seq_name = sequence.seq_name AND apis_ann.dataset = sequence.dataset AND apis_ann.source = 'APIS' "

query += "WHERE sequence.dataset = '#{dataset}'"
query += " LIMIT #{opt.limit}" if opt.limit
db.query(query).each do |row|
  seq_name, kingdom, phylum, cl, ord, family, genus, species, in_ann, ap_ann = row
  frame = 1
  if (!opt.ann)
     contig, start, stop = seq_name.split("_")
  else
    if (in_ann =~/\/read_id=([A-Z|a-z|\_|0-9]+) \/begin=([0-9]*) \/end=([0-9]*) \/orientation=([0-9|-]+)/)
     contig, start, stop, strand = $1, $2, $3, $4
     start, stop = stop, start if (strand == "-1")
   end
  end
  start = start.to_i
  stop = stop.to_i
  if (start > stop)
    start, stop = stop, start
    strand = "-"
  else
    strand = "+"
  end
  ann = ""
  ann += "annotation \"" + ap_ann + "\" " if !ap_ann.nil?
  ann += "kingdom \"" + kingdom + "\" " if !kingdom.nil?
  ann += "phylum \"" + phylum + "\" " if !phylum.nil?
  ann += "class \"" + cl + "\" " if !cl.nil?
  ann += "order \"" + ord + "\" " if !ord.nil?
  ann += "family \"" + family + "\" " if !family.nil?
  ann += "genus \"" + genus + "\" " if !genus.nil?
  ann += "species \"" + species + "\" " if !species.nil?
  printf("%s\t%s\t%s\t%d\t%d\t%s\t%s\t%d\t%s\n", contig, "APIS", "CDS", start, stop, ".", strand, frame, ann)
end
